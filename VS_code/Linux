# Kernel:- Kernel is nothing but the core part of an operating system which provides coordination between user and hardware.
* Example: vmlinuz for Linux.
# Shell:- Shell is a mediator which is going to translate the human level language to machine level language (binary) and vice versa.
* Examples: bash, csh, ksh

Linux distributions:-
1.	Red hat
2.	SUSE
3.	Linux Mandrake
4.	Puppy Linux
5.	Ubuntu
6.	Debain
7.	BOSS
8.	Turbo Linux
9.	Slack ware Linux
---------------------------------------
File system hierarchy:-
# /:-     Slash is a top level working directory in Linux and Unix platform. It is also known as parent directory.
# /root:- This is a default home directory of super user. It contains the data generated by super user.
Example: super user
Root---/root
/home:-
This directory contains the profiles of all the normal users.
Example:-
Normal users
1.	user1- /home/user1
# /boot:- This directory contains the static data which is used by OS at the time of booting.
Example:-
1.	GRUB
2.	Vmlinuz
# /sbin:- This directory contains the administrative commands used by super users.
Example:  fdisk, netconfig
# /bin:-  This directory contains the common commands used by both types of users (administrator & non-administrator).
Example: ls, mkdir
# /usr:- USR stands for Unique System Resources. It contains all the program related files.
# /var:- Var contains all the variable data which keeps on changing.
Example: system log files, e-mail accounts. 
/dev:-
Dev contains all the device information connected to a particular system.
Example: cd drive, HDD, mouse etc.
# /etc:-   etc contains all the configuration files related to the system and network resources.
# /media:- This directory is used for accessing the external devices like pen drive or cd –Rom.
# /opt:-   This directory is basically used for installing the 3rd party applications.
----------------------------------------------
Command:
It is nothing but a script or a program used for providing instructions to the OS.

# uname            --->	To check the OS name
# uname –r         ---> To check the release of OS 
# whoami           ---> To check the present working user account
# pwd              ---> To check the present working location 
# ls               ---> To list the contents of present working directory
# ls –l            ---> To list the properties
# ls -i            ---> To check the inode numbers
# ls –a            ---> To check the hidden objects
# ls –ali          ---> To list the files with all properties
# date             ---> To check the system date:- 
# cal              ---> To check the calendar 
# cal 2011         ---> To check the calendar of particular year 
# cal 2 2011       ---> To check the calendar of specific month and year 
# gnome-calculator ---> To perform calculations
# To change the system date = #date –s “Thu jun 19 13:20:20  IST 2011”

For creating files:-
# touch ---> touch file.txt
# cat   ---> cat > linux 
# vi    ---> vi file.txt
-----------------------
# mkdir  foldername         ----> For creating a single directory or folder
# mkdir  folder1    folder2 ----> For creating a multiple directories
----------------------
# For copying & pasting the objects:-
Syntax:-
# cp  <options>  <source>  <destination>
Options:
1.	  –r=recursive
2.	   –v=verbose
3.	   –f=forcefully
# For copying a file: - #cp    /root/install.log          /opt
# For copying a directory:- #cp  -r(v or f)  /root/unix   /opt
-----------------
# For moving the objects:-  (cut & paste)
Syntax:-
# mv   <source>   <destination>  
# mv  /root/unix     /opt
For renaming the objects:-
Syntax:-
# mv  <old name>  <new name>
---------------------
# For deleting the objects:-
Syntax:-
# rm  <options> < source> 
Options:-
1.	 –r=recursive
2.	 –f=forcefully
# For deleting a file:- #rm   filename
# For deleting a directory:- #rm   -rf   directory name
# For deleting empty directory:-#rmdir    directory name
# To remove all files and folders in present directory:- #rm   -rf  *
---------------------
Editors:-
# There are two types of editors.
In text based:-
1.	vi (visual editor)
2.	vim

Operations of command mode:-
1.	dd   = deletes a line
2.	ndd  = deletes ‘n’ lines
3.	yy   = copies a line
4.	nyy  = copies ‘n’ lines
5.	p    = put(pastes the deleted or copied text)
6.	u    = undo (you can undo 1000 times)
7.	dw  = to delete a word 
8.	yw   =to copy a word 
9.	/<word to find>= finds a word (press n for text)
10.	Ctrl + r = redo
11.	Shift + g = moves the cursor to the last line of the file.

Execution mode:-
# This is the last mode of vi editor in which we can perform the operation like saving a file or quitting a file without saving.
1. :q= quit without saving
2. :q!= quit forcefully with out saving.
3. :w= write(save)
4. :wq= save and quit forcefully
5. :se nu= sets line numbers
6. :se nonu= removes line numbers
7. :84= the cursor goes to line 84
8. :wn= to save & switch to next file
9. :rew= to switch to last file(without saving)
-----------------------------------------------------
Manipulation commands:-
1. wc
2. grep
3. find
4. head & tail
5. man & info
* To count no of lines, words & characters:- #wc   filename
* To count no of lines:-#wc –l filename
* To count no of words:-# wc –w filename 
* To count no of characters:-# wc –c filename
* To search a word in a file:- #grep   <word>  <filename>
* To search a word in a 2 files:-  #grep <word>   <filename1> <filename2>
* To find a particular file:- #find  <location>  <parameter>   <filename> # Example:-  #find     /    -name  hosts
* To view top 10 lines in a file:#head filename
* To view bottom10 lines in a file:-#tail filename
* To view top n lines in a file:-# head –n filename
* To view bottom n lines in a file:-# tail –n filename
By default head & tail shows 10 lines.
* To get the manual page of mkdir:-#man mkdir
* To get the information of mkdir:-#info mkdir
-----------------------------------------------------
Bash:- (Bourne again shell) 
Features of bash shell:-
1.	Command history
2.	Command aliasing
3.	Command completion
* To check the available shells:-#cat   /etc/shells
* To check the present working shell:- #echo $SHELL
* To check available aliases:- #alias
* To set a alias:-#alias c=clear
* To remove a alias:-#unalias c
* To check the history of executed commands:- #history
* To recall a command from history:- #!464  ----  (464 is a line number)
--------------------------------------------------------------
# vi   /etc/passwd
Username:x:UID:GID:comment:/home/username:/bin/bash
X=mask password
Example:-Vishnu:x:501:501::/home/Vishnu:/bin/bash
# vi    /etc/shadow
Username:encrypted password:no of days since 1970:min life of password:max life of password:warning period:::
Example:- Vishnu:$jhdsf:15241:0:99999:7:::
------------------------------------------------------------
* To create a user account:- #useradd    username 
* To assign the password for a user:-#passwd username
* To login in user account:-#gdmflexiserver   --xnest Or  #su – username
* To check the user status:-# grep username   /etc/passwd
* To change the default shell:-# useradd –s /bin/ksh  raj
* To change the default home directory:- #useradd    -d /opt/sunny    sunny
* To provide a comment to a user:-#useradd –c manager  ram
* To change an UID to a user:-#useradd  –u 555 user5
* Put usermod instead of useradd when the user is already exists.
* For deleting a user account recursively:-#userdel  -r user5
------------------------------------------------------------
# For modifying user properties:-
Syntax:-
#usermod   <options>     <existing username>
Options:-
1.	–L ---- to lock an account
2.	–U ---- to unlock an account
3.	–l ---- to change login name
* To lock an user account:-      #usermod  -L username
* To unlock an user account:-    #usermod  -U username
* To change the login name:-     #usermod  -l <new name> <old name> 
* To check the password status:- #passwd   –S username
For managing user accounts in graphical mode:-
# system-config-users
-----------------------------------------------------------------
Basic file and folderpermission:-
-	             rw-       r--       r--
d                   rwx       r-x       r-x
types of object     owner    group     others

Access mode               Access level
Read(r) -4                owner (u)    
Write(w)-2                group(g)
Execute(x)-1              others(o)  
Tools:
1.	chown
2.	chgrp
3.	chmod
create a file:- #touch filename
To apply full permissions for group:- 
# chmod  g+rw   /filename
To apply full permissions for others:- 
# chmod  o+rw   /filename
For removing permissions from other & group:- 
# chmod    og-rw   /filename
To apply full permission for owner, group and others:- 
# chmod  a=rw  /filename
----------------------------------------------------------------------------------------------------
Numeric values:-
1.	execution[x]  - 1
2.	write[w]        -  2
3.	execution + write[x+w]  - 3
4.	read[r]  -  4
5.	read + execution[r+x] – 5
6.	read  + write [r+w]  -  6
7.	read + write + execute[r+w+x] – 7

* To view the statistics of a file:- #stat   /filename
* For modifying the permissions for others: - #chmod    6  /filename
* For modifying the permissions for all (full permission):- 
# chmod 666  /filename
* For changing the ownership of a file:- #chown    raju   /filename
* For changing the group ownership of the file:-#chgrp   sales    /filename
----------------------------------------------------------------------------------------------------
Partitions:-
Partition is nothing but a boundary specified within a storage device, to utilize the available disk space.
Tools of partition:-
1.	 fdisk (max: 15 partitions)—post installation
2.	 parted(max : 63 partitions)—post installation
3.	 Disk druid(pre installation)

For creating a partition in existing OS:-
Syntax:
#fdisk   <device name>
To get the device name and to list the number of parttions:- #fdisk  -l
fdisk prompt:
m – Help
d – Delete a partition
n – Adding a new partition
p – Print the partition table
q – To quit without saving
w – To quit with saving
#fdisk  /dev/hda
[fdisk prompt]:n
[first cylinder]: press enter
[last cylinder]: +2GB
[fdisk prompt]:w

To update the partition table:-#partprobe   /dev/hda
Formatting:-
Formatting is a process used for specifying a disk base file system over a storage device.
Types of file system:
1.	ext2
2.	ext3 – latest in RHEL
3.	ext4 – latest in fedora
Tools:-
1.	mkfs.ext2
2.	mkfs.ext3
For formatting a partition with ext2 file system:-
#mkfs   -t  ext2   /dev/hda8
       or
#mkfs .ext2    /dev/hda8
For formatting a partition with ext3 file system:-
#mkfs   -t  ext3   /dev/hda8
       or
#mkfs .ext3    /dev/hda8

Mounting:-
 Mounting is a mechanism used for mapping or creating a logical link between a storage device to a directory.
To check the mounted partitions:-  #mount
To mount a partition:-
1.	create a directory:-# mkdir     /directoryname
2.	to mount the partition:-#mount   /dev/hda     /directory name
For unmounting the partition:- #umount  /dev/hda8
For rebooting the system:- #reboot
For mounting a partition permanently:-#vi  /etc/fstab
Type a new line:-
/dev/hda8    /directory name  ext3   defaults   0   0
:wq
To update mount table:- #mount  -a

Label:-
Label is a process used for assigning individual identification for a particular partition.
To check the label of a partition:-#e2label  /dev/hda1
To assign a label:-#e2label   /dev/hda8    songs
To remove a label:-#e2label   /dev/hda8  “  ”
For mounting a partition with label:-
#mount  LABEL=songs   /directory name  
For checking the mount labels:-#mount   -l

Swap:-
It is a virtual file system basically used for improving the system performance by dedicating a part of hard disk to act as a virtual RAM.
Creating a swap partition:-
Create a partition:-  #fdisk    /dev/hda
Update the partition table:-#partprobe   /dev/hda
To format a partition with swap file system:-#mkswap   /dev/hda9
To enable a swap partition:-#swapon  /dev/hda9
To check already existing swap memory:-#swapon  -s

    -------Adding Swap Memory ---------
swapon  --show
free -h 
lsblk
mkswap /dev/nvme2n1
swapon /dev/nvme2n1
vi /etc/fstab   
UUID=ebfe86b1-8b21-47da-9636-252d444cf4d1 /dev/nvme2n1 none swap sw 0 0
mount -a
swapon --show or swapon -s
lsblk
free -h

--------------------------------------------------------------------------------------------------------
Backup:-
It is a method used for preventing the data loss in a system. It is a method used for maintaining a Xerox or duplicate copy of required data.
Methods of backup:-
1.	Local backup
2.	External backup
3.	Network backup

Tools of backup:-
1.	Local backup:
a.	cp
b.	tar
c.	cpio

2.	External backup:
a.	dump
b.	kb III
c.	nero

3.	Network backup:
a.	scp
b.	rsync


For taking backup with tar:-
Syntax:
#tar  <options>   <backup file name>   <source>
Options:-
1.	–c  --- create a backup file
2.	–v  --- verbose
3.	–f  --- forcefully
4.	–x  --- to extract the backup

# Create the source:- #mkdir  /linux
# touch    /linux/sample.txt{1..10}
For taking the backup:-
# tar   -cvf  /opt/backup.tar   /linux
For checking the backup:-
# rm  -rf  /linux
For extracting the backup:-
# tar   -xvf  /opt/backup.tar
To restore the backup in required location:-
# tar  -xvf  /opt/backup.tar  -C  /var
For taking backup with cpio:-
Create some your own files:- 
# touch file{1..10}.txt
Syntax:-
# ls   i* | cpio <options>  >  <backuppath & file name>

Options:-
o – output
i – input
v – verbose
f – forcefully
# ls   file* | cpio –ovf  > /opt/file.cpio
For checking the backup:-
# rm   -rf  file*
For restoring the backup:-
# cpio   -ivf  <   /opt/file.cpio
For taking backup with dump:-
Syntax:-
# dump  <options>  <back up file or raw partition or tape drive>    <source>                       
# Options:
0-9 – level of backup
u   – update
f   --forcefully
# Level of backup:-
0 – full backup
1-8 – incremental backup
9 – differential backup
--------------------------------------------------------------------------------------------------
# Full backup:-
* Using this level of backup we can take the complete file systems image in a backup file or special device (tape drive).
# Incremental backup:-
* Using this level of backup we can take the backup of only newly generated data.
# Differential backup:-
* Differential backup is also a type of full backup in which we are going to take a full backup of all incremental backups.

# For recovering the backup with restore:-
* Syntax:-
# restore  <options>  <backup filename>
Options:
1.	 –r – recursive
2.	–f – forcefully
For taking full backup:-  
# dump -0uf   /opt/full.dump   /dev/hda7
For taking incremental backup:- 
# dump -1uf  /opt/first.dump   /dev/hda7
Up to 8 we have to take incremental backup.
For taking differential backup:- 
# dump -9uf  /opt/diff.dump  /dev/hda7
For checking the backups:-
# cd  /home
# rm  -rf  *
For restoring the backup:-
# restore  -rf  /opt/full.dump
# restore  -rf  /opt/first.dump
# restore  -rf  /opt/diff.dump
------------------------------------------------------------------------------------------------------------
Compression tools:-
1.	gzip[.gz]
2.	bzip2[.bz2]
Decompression tools:-
1.	gunzip
2.	bunzip2
syntax:
# gzip filename
# gunzip filename with extension
# bzip2 filename
# bunzip2 filename with extension
------------------------------------------------------------------------------------------------------------------
To check the IP address:-
# ifconfig   [interface configuration]
To assign IP address:-[temporarily]
# ifconfig <device name>  <IP address> 
# ifconfig eth0  192.168.0.1
To assign a permanent address:-
# netconfig
To update the service:-
# service network restart
To check the LAN connectivity:-
# mii-tool
To disable the LAN card temporarily:-
# ifdown eth0
To enable the LAN card:-
# ifup eth0
To check the database information of IP:-
# cd  /etc/sysconfig/network-scripts
# cat ifcfg-eth0
--------------------------------------------------------------------------------------------------------------------
NETWORK ADMINISTRATION CONCEPTS

File server:-
Using file servers mechanism we can share the resources from one centralized location to all the clients connected in a same network.
Types of File servers:-
1.	NFS Server [Network File System]
2.	FTP Server [File Transfer Protocol]
3.	Samba [Smb] Server [Server Message block]

# 1.NFS Server: [Network File System]
* NFS service is a platform dependant service used for sharing the resources only between UNIX and LINUX clients.
# Drawbacks for NFS:
* NFS uses a session protocol called RPC [Remote Procedure Call] which in turn generates a lot of network traffic by providing individual connections for every client.

Requirements:-
Packages:-
1. portmap*
2. nfs*   
Port numbers:-
1. portmap-111
2. nfs-2049
Configuration files:-
vi /etc/exports
Services:-
1.	portmap
2.	nfs

# Installation steps for NFS Server:-
Step No 1:- Provide the hostname
# hostname nfs.zoom.com
Make the hostname permanent:-
# vi      /etc/sysconfig/network
Line 3: HOSTNAME=nfs.zoom.com
:wq
Provide the IP address:-
# netconfig
Give IP address.
Map the IP with host name:-
# vi   /etc/hosts
192.168.0.x    nfs.zoom.com    nfs
:wq

Update the service:
# service network restart

Step no 2:-   Install the packages.
# yum install nfs* portmap*
Create the shared resource:-
# mkdir   /redhat
# touch    /redhat/{1..10}.rpm
•	Edit the configuration file:-
#vi    /etc/exports
/redhat     *(rw)
:wq

Step no 3 :- Update the services
# service portmap restart
# service nfs restart
Client side configuration:-
# showmount  -e 192.168.0.x
# mount   192.168.0.x:/redhat      /opt
# cd    /opt
# ls
----------------------------------------------------------------------------------------------
•	SERVICES PORT NUMBERS: (for quick reference)
1.	HTTP (80)
2.	HTTPS (443)
3.	NFS (2049), PORTMAP (111)
4.	FTP (20,21)
5.	SAMBA (137, 138&139)
6.	DHCP (67,68)
7.	DNS (53)
8.	SQUID [PROXY] (3128)
9.	TELNET (23)
10.	MAIL Server
a.	SMTP (25)
b.	POP (110)
c.	IMAP (143)
11.	NIS
a.	NFS (2049)
b.	PORTMAP (111)
c.	YPSERV (Random port numbers above 1024)
12.	KICKSTART 
a.	FTP (20,21)
b.	DHCP(67,68)
13.	SSH (22)
------------------------------------------------------------------------------------------------------
1. List the password and its related details for an user :-  
Syntax: 
# chage –-list username (or) chage -l username

2. Set Password Expiry Date for an user using chage option -M :-
Syntax: 
# chage -M number-of-days username
# chage -M 10 dhinesh

3. Set the Account Expiry Date for an User
# chage -E "2009-05-31" dhinesh
# chage -l dhinesh --check it

4. Force the user account to be locked after X number of inactivity days
# chage -I 10 dhinesh

5. How to disable password aging for an user account
To turn off the password expiration for an user account, set the following:
•	-m 0 will set the minimum number of days between password change to 0 
•	-M 99999 will set the maximum number of days between password change to 99999 
•	-I -1 (number minus one) will set the “Password inactive” to never 
•	-E -1 (number minus one) will set “Account expires” to never. 
# chage -m 0 -M 99999 -I -1 -E -1 dhinesh
------------------------------------------------------------------------------------------------------

Questiones and Answers
1. How to create the duplicate root user?
# useradd -o -u 0 -g root <user name>

2. How many types of users available in Linux?
There are 5 types of users available in Linux.
# System user (Admin user who control the whole system nothing but root user).
# Normal user (Created by the Super user. In RHEL - 7 the user id's from 1000 - 60000).
# System user (Created when application or software installed ).
(In RHEL - 7 the System users are
Static system user id's from 1 - 200 and
Dynamic system user user id'sfrom 201 - 999).
# Network user (Nothing but remote user, ie., who are login to the system trough network created
in Windows Active Directory or in Linux LDAP or NIS).
# Sudo user (The normal users who are having admin or Super user privileges)

3. What are fields available in /etc/passwd file?
<user name> : x : <uid> : <gid> : <comment> : <user's home directory> : <login shell>
(where 'x' means link to password file ie., /etc/shadow file)

4. What are fields available in /etc/shadow file?
user name : password : last changed : min. days : max. days : warn days : inactive days : expiry days : reserved for future

5. What are the files that are related to user management?
➢ /etc/passwd -----> Stores user's information like user name, uid, home directory and shell ...etc.,
➢ /etc/shadow ----> Stores user's password in encrypted form and other information.
➢ /etc/group ------> Stores group's information like group name, gid and other information.
➢ /etc/gshadow ---> Stores group's password in encrypted form.
➢ /etc/passwd- ---> Stores the /etc/passwd file backup copy.
➢ /etc/shadow- ---> Stores the /etc/shadow file backup copy.
➢ /etc/default/useradd ----> Whenever the user created user's default settings taken from this file.
➢ /etc/login.defs ----> user's login defaults settings information taken from this file.
➢ /etc/skell ------> Stores user's all environmental variables files and these are copied from this directory to user's home directory.

6. In how many ways can we create the users?
# useradd - <options><user name>
# adduser - <options><user name>
# newusers <file name> (In this file we have to enter the user details same as /etc/passwd file

7. How to recover if the user deleted by mistake?
# pwunconv (It creates the users according /etc/passwd file and deletes the /etc/shadow file)

8. What are the uses of .bash_logout, .bash_profile and .bashrc files?
# .bash_logout : is a user's logout ending program file. It will execute first whenever the user is logout.
# .bash_profile : is user's login startup program file. It will execute first whenever the user is login. It consists the user's environmental variables.
# .bashrc : This file is used to create the user's custom commands and to specify the umask values for that user's only.

# groups <user name>             ---> check the user belongs to how many groups
# groupadd <options><group name> ---> syntax to create the group
# groupmod <options><group name> ---> syntax to modify the group
# groupdel <group name>          ---> (to delete the group without options)
# groupdel -R <group name>       ---> (to delete the group and apply changes to the root directory)
# grpconv (it creates the /etc/gshadow file from /etc/group file) ---> to restore /etc/gshadow file if deleted by mistake

9. What are the default permissions of a file and directory?
# The default permissions of a file = 6 6 6
# The default permissions of a directory = 7 7 7

10. How to change the password for multiple users at a time?
# chpasswd (to change multiple user's passwords)
<user name 1> : <password>
<user name 2> : <password>
<user name 3> : <password>

11. How to see the usage information of mounted partitions?
# df -hT (to see device name, file system type, size, used, available size, use% and mount point)

12. How to see the size of the file or directory?
# du -h <filename or directory name> (to see the size of the in that directory)
# du -h (to see all the file sizes which are located in the present working directory)
# du .| sort -nr | head -n10 (to see the biggest files from current location)
# du -s * | sort -nr | head -n10 (to see the biggest directories from that partition)
# ncdu (to list biggest files and directories, we have to install the ncdu package before executing this)

13. What is the basic rule for swap size?
a. If the size of the RAM is less than or equal to 2GB, then the size of the swap = 2 X RAM size.
b. If the size of the RAM is more than 2GB, then the size of the swap = 2GB + RAM size.
-------Adding Swap Memory ---------
swapon  --show
free -h 
lsblk
mkswap /dev/nvme2n1
swapon /dev/nvme2n1
vi /etc/fstab   
UUID=ebfe86b1-8b21-47da-9636-252d444cf4d1 /dev/nvme2n1 none swap sw 0 0
mount -a
swapon --show or swapon -s
lsblk
free -h

14. How to unmount a file system forcefully?
# umount -f <mount point>
# fuser -ck <mount point>

15. How to know the file system type?
# df -hT (command gives the file system type information)

16. How to know which file system occupy more space and top 10 file systems?
# df -h <device or partition name> | sort -r | head -10

17. What is the command to know the mounted file systems?
# mount or # cat /etc/mtab

